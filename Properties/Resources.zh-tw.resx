<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="clipboard_failed" xml:space="preserve">
    <value>複製到剪貼簿失敗</value>
  </data>
  <data name="Context_Description" xml:space="preserve">
    <value>配置選單選項與順序
0_開啟資料夾、1_以管理員身分執行、2_以其他使用者身分執行、3_複製、4_複製路徑、5_在命令提示字元中開啟、6_在指定軟體中開啟、 7_刪除檔案/資料夾、 8_右鍵選單</value>
  </data>
  <data name="copy_file" xml:space="preserve">
    <value>複製</value>
  </data>
  <data name="copy_path" xml:space="preserve">
    <value>複製路徑</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="EnvVar" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="EnvVar_Description" xml:space="preserve">
    <value>搜尋時可用環境變數，但會增加搜尋時間</value>
  </data>
  <data name="EverythingPath_Description" xml:space="preserve">
    <value>若Everything安裝位置非預設的Program Files，請提供Everything.exe的位置</value>
  </data>
  <data name="Everything_ini" xml:space="preserve">
    <value>是否有安裝 Everything?</value>
  </data>
  <data name="Everything_not_running" xml:space="preserve">
    <value>Everything 尚未啟動</value>
  </data>
  <data name="folder_open_failed" xml:space="preserve">
    <value>無法啟動資料夾</value>
  </data>
  <data name="Match_path_Description" xml:space="preserve">
    <value>也收尋路徑</value>
  </data>
  <data name="Max_Description" xml:space="preserve">
    <value>結果中顯示的結果數上限</value>
  </data>
  <data name="more_results" xml:space="preserve">
    <value>顯示更多結果...</value>
  </data>
  <data name="more_results_Subtitle" xml:space="preserve">
    <value>在Everything主視窗裡查看更多結果</value>
  </data>
  <data name="open_containing_folder" xml:space="preserve">
    <value>開啟檔案位置 (Ctrl+Shift+E)</value>
  </data>
  <data name="open_in_console" xml:space="preserve">
    <value>在命令提示字元裡開起 (Ctrl+Shift+C)</value>
  </data>
  <data name="plugin_description" xml:space="preserve">
    <value>利用 Everything 搜尋電腦上的檔案</value>
  </data>
  <data name="Prefix_Description" xml:space="preserve">
    <value>為收尋詞增加固定的前綴，在收詢時不用再自行打修飾詞/篩選詞
前綴與收尋詞之間不會自動加入空格</value>
  </data>
  <data name="Preview_Description" xml:space="preserve">
    <value>將檔案內容顯示為預覽圖示，預覽雲端的檔案可能會造成停頓</value>
  </data>
  <data name="QueryText_Description" xml:space="preserve">
    <value>選取結果時更新搜尋詞，獲得更多資訊，但可能會變更搜尋結果</value>
  </data>
  <data name="RegEx_Description" xml:space="preserve">
    <value>RegEx 正規表示式搜尋
不建議啟用，建議在收尋詞裡使用 regex:</value>
  </data>
  <data name="run_as_admin" xml:space="preserve">
    <value>以系統管理員身分執行 (Ctrl+Shift+Enter)</value>
  </data>
  <data name="run_as_user" xml:space="preserve">
    <value>以其他使用者身分執行 (Ctrl+Shift+U)</value>
  </data>
  <data name="ShowMore_Description" xml:space="preserve">
    <value>在Everything裡顯示剩餘的收尋結果</value>
  </data>
  <data name="Sort_Description" xml:space="preserve">
    <value>設定結果排序方法</value>
  </data>
  <data name="SwapCopy_Description" xml:space="preserve">
    <value>使用 Ctrl+C 複製檔案，Ctrl+Alt+C 複製路徑</value>
  </data>
  <data name="UpdateAvailable" xml:space="preserve">
    <value>更新EverythingPowerToys?
按 '否' 不再通知這版的更新

安裝版本：{0}
最新版本：{1}</value>
  </data>
  <data name="Updates" xml:space="preserve">
    <value>啟用時檢查是否有更新</value>
  </data>
  <data name="CustomProgram_Description" xml:space="preserve">
    <value>要使用的指定軟體路徑</value>
  </data>
  <data name="CustomArg_Description" xml:space="preserve">
    <value>執行參數 [$P=收尋結果路徑]</value>
  </data>
  <data name="open_in_custom" xml:space="preserve">
    <value>在指定軟體裡開起 (Ctrl+N)</value>
  </data>
  <data name="MissingLib" xml:space="preserve">
    <value>缺少 Everything.64.dll，是否自動下載？</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>已啟用「包含全域結果中」選項於History插件，可能會與 EPT 發生衝突。</value>
  </data>
  <data name="right_click" xml:space="preserve">
    <value>右鍵選單 (Ctrl+M)</value>
  </data>
  <data name="delete_result" xml:space="preserve">
    <value>刪除檔案/資料夾 (Ctrl+Del)</value>
  </data>
</root>