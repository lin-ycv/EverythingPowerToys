<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="clipboard_failed" xml:space="preserve">
    <value>无法设置剪贴板中的文本</value>
  </data>
  <data name="Context_Description" xml:space="preserve">
    <value>配置选单选项与顺序
0_打开所在文件夹、1_以管理员身分运行、2_以不同的使用者身分运行、3_复制、4_复制路径、5_在控制台中开启</value>
  </data>
  <data name="copy_file" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="copy_path" xml:space="preserve">
    <value>复制路径</value>
  </data>
  <data name="EnvVar_Description" xml:space="preserve">
    <value>搜索时可以使用环境变量，但会增加搜索时间</value>
  </data>
  <data name="Everything_ini" xml:space="preserve">
    <value>是否安装了 Everything?</value>
  </data>
  <data name="Everything_not_running" xml:space="preserve">
    <value>Everything 没有运行</value>
  </data>
  <data name="folder_open_failed" xml:space="preserve">
    <value>无法打开所在文件夹</value>
  </data>
  <data name="Match_path_Description" xml:space="preserve">
    <value>匹配路径</value>
  </data>
  <data name="Max_Description" xml:space="preserve">
    <value>结果中显示的最大结果数</value>
  </data>
  <data name="open_containing_folder" xml:space="preserve">
    <value>打开所在文件夹 (Ctrl+Shift+E)</value>
  </data>
  <data name="open_in_console" xml:space="preserve">
    <value>在控制台中打开路径 (Ctrl+Shift+C)</value>
  </data>
  <data name="plugin_description" xml:space="preserve">
    <value>利用 Everything 搜索磁盘文件</value>
  </data>
  <data name="plugin_name" xml:space="preserve">
    <value>Everything</value>
  </data>
  <data name="Preview_Description" xml:space="preserve">
    <value>以图标形式预览文件内容，如果文件不是本地文件，可能会导致冻结</value>
  </data>
  <data name="QueryText_Description" xml:space="preserve">
    <value>选取结果时更新搜寻词，获得更多资讯，但可能会变更搜寻结果</value>
  </data>
  <data name="RegEx_Description" xml:space="preserve">
    <value>RegEx 正则表达式搜索</value>
  </data>
  <data name="run_as_admin" xml:space="preserve">
    <value>以管理员身份运行 (Ctrl+Shift+Enter)</value>
  </data>
  <data name="run_as_user" xml:space="preserve">
    <value>以不同的使用者身份运行(Ctrl+Shift+U)</value>
  </data>
  <data name="Sort_Description" xml:space="preserve">
    <value>设定结果排序方法</value>
  </data>
  <data name="SwapCopy_Description" xml:space="preserve">
    <value>使用 Ctrl+C 复制档案，Ctrl+Alt+C 复制路径</value>
  </data>
  <data name="Updates" xml:space="preserve">
    <value>检查是否有更新</value>
  </data>
  <data name="UpdatesAvailable" xml:space="preserve">
    <value>更新EverythingPowerToys吗？
点击 '否' 将不再收到有关此版本更新的通知

安装版本：{0}
最新版本：{1}</value>
  </data>
</root>
