name: Push updates to package managers

on:
  release:
    types: [published]

  workflow_dispatch:
  
jobs:
  build:
    if: "!github.event.release.prerelease"
    runs-on: windows-latest

    steps:
      
      - name: Config and Push
        run: |
          rm .git -Recurse -Force -Confirm:$false
          
          # Get Chocolatey manifests
          git clone --filter=blob:none --no-checkout --depth 1 https://github.com/lin-ycv/chocolatey-pkgs.git
          cd chocolatey-pkgs
          git sparse-checkout set --cone
          git sparse-checkout set .\manifests\everythingpowertoys
          git checkout main

          # Use Choco-AU to get the data
          Install-Module Chocolatey-AU -Force
          cd .\manifests\everythingpowertoys
          $UpdateOutput = .\update.ps1
          echo $Latest.Version $Latest.URL64 $Latest.Checksum64 $Latest.ARM64 $Latest.Checksuma64

          # Chocolatey: Check (and Push)
          $NupkgPath = (($UpdateOutput.Result | Where-Object {$_ -like '*.nupkg''*'}) -split "'")[1]
          if ($NupkgPath){
            Write-Output "Newer Version Available: push to Choco"
            $ApiKey = '${{ secrets.CHOCOLATEY }}'
            $ChocoServer = 'https://push.chocolatey.org/'
            choco push $NupkgPath --source $ChocoServer --key $ApiKey
          }
          cd ..\..\..

          # Winget
          rm -Path .\* -Recurse -Force
          git clone -b winget https://github.com/lin-ycv/EverythingPowerToys.git --depth 1
          Invoke-WebRequest https://aka.ms/wingetcreate/latest -OutFile wingetcreate.exe
          cd .\EverythingPowerToys
          rm .git -Recurse -Force -Confirm:$false
          Get-ChildItem *.* -Recurse | ForEach { (Get-Content $_) | ForEach  {$_ -Replace '_VERSION_', $Latest.Version} | ForEach  {$_ -Replace '_X64_', $Latest.URL64} | ForEach  {$_ -Replace '_HASH64_', $Latest.Checksum64} | ForEach  {$_ -Replace '_ARM64_', $Latest.ARM64} | ForEach  {$_ -Replace '_HASHarm64_', $Latest.Checksuma64} | Set-Content $_ }
          ..\wingetcreate submit -p "New version: EverythingPowerToys version $Latest.Version" -t ${{ secrets.EVERYTHINGPT }} .